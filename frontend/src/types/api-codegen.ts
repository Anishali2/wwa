/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['AppController_getHello']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/auth/register': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post: operations['AuthController_register']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/auth/login': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post: operations['AuthController_login']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/auth/all': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['AuthController_getAll']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/classes': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['ClassesController_findAll']
    put?: never
    post: operations['ClassesController_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/classes/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['ClassesController_findOne']
    put?: never
    post?: never
    delete: operations['ClassesController_remove']
    options?: never
    head?: never
    patch: operations['ClassesController_update']
    trace?: never
  }
  '/user/data': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['UserController_getData']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/students': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['StudentsController_findAll']
    put?: never
    post: operations['StudentsController_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/students/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['StudentsController_findOne']
    put?: never
    post?: never
    delete: operations['StudentsController_remove']
    options?: never
    head?: never
    patch: operations['StudentsController_update']
    trace?: never
  }
  '/school/create': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post: operations['SchoolController_createSchool']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
}
export type webhooks = Record<string, never>
export interface components {
  schemas: {
    RegisterDto: {
      /** @default salleh */
      name: string
      /** @default salleh@gmail.com */
      email: string
      /** @default 123456789 */
      password: string
      /** @default ADMIN */
      role: string
      /**
       * @description The status of the user
       * @enum {string}
       */
      status: 'active' | 'inactive' | 'pending'
      /** @default  */
      school: string
      /** @default true */
      isActive: boolean
      profile: {
        mobileNumber?: string
        /** Format: date-time */
        joinDate?: string
        salary?: number
        /** @enum {string} */
        gender?: 'MALE' | 'FEMALE'
        fatherHusbandName?: string
        experience?: string
        nationalId?: string
        education?: string
        bloodGroup?: string
        /** Format: date-time */
        dob?: string
      }
    }
    LoginDto: {
      /** @default salleh@gmail.com */
      email: string
      /** @default 123456789 */
      password: string
    }
    JWtDto: {
      id: string
      school: string
      /** @enum {string} */
      role:
        | 'ADMIN'
        | 'TEACHER'
        | 'STUDENT'
        | 'ACCOUNTANT'
        | 'PRINCIPLE'
        | 'STORE_MANAGER'
        | 'MANAGEMENT_STAFF'
    }
    CreateClassDto: {
      /**
       * @description The name of the class
       * @example Math
       */
      name: string
      /**
       * @description The type of class
       * @example Co-Education
       * @enum {string}
       */
      type: 'Co-Education' | 'Boys' | 'Girls'
      /** @description A short description of the class */
      description?: string
    }
    Class: Record<string, never>
    UpdateClassDto: Record<string, never>
    ParentsDto: {
      fatherName: string
      motherName: string
      contact: string
    }
    CreateStudentDto: {
      name: string
      age: number
      grade: string
      section: string
      gender: string
      parents: components['schemas']['ParentsDto']
      classId: string
    }
    Student: Record<string, never>
    UpdateStudentDto: Record<string, never>
    CreateSchoolDto: {
      /** @default School Name */
      name: string
      /** @default true */
      isActive: boolean
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}
export type $defs = Record<string, never>
export interface operations {
  AppController_getHello: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': string
        }
      }
    }
  }
  AuthController_register: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['RegisterDto']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': Record<string, never>
        }
      }
    }
  }
  AuthController_login: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['LoginDto']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': string
        }
      }
    }
  }
  AuthController_getAll: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['JWtDto']
        }
      }
    }
  }
  ClassesController_findAll: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Class'][]
        }
      }
    }
  }
  ClassesController_create: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateClassDto']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Class']
        }
      }
    }
  }
  ClassesController_findOne: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Class']
        }
      }
    }
  }
  ClassesController_remove: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  ClassesController_update: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateClassDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Class']
        }
      }
    }
  }
  UserController_getData: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  StudentsController_findAll: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Student'][]
        }
      }
    }
  }
  StudentsController_create: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateStudentDto']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Student']
        }
      }
    }
  }
  StudentsController_findOne: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Student']
        }
      }
    }
  }
  StudentsController_remove: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  StudentsController_update: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateStudentDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Student']
        }
      }
    }
  }
  SchoolController_createSchool: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateSchoolDto']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': Record<string, never>
        }
      }
    }
  }
}
